name: Compile code and container and publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: get publish tag
      id: tag
      run: echo "docker_tag=$(date +%Y-%m-%dT%H-%M-%SZ%Z)" >> $GITHUB_OUTPUT
    - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Build the Docker image (alpine)
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        TAG: ${{steps.tag.outputs.docker_tag}}
      run: docker build . --file Dockerfile.x86_64.alpine --tag $DOCKER_USER/unity2promgo:alpine$TAG
    - name: Build the Docker image (debian)
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        TAG: ${{steps.tag.outputs.docker_tag}}
      run: docker build . --file Dockerfile.x86_64.debian --tag $DOCKER_USER/unity2promgo:debian$TAG
    - name: Docker Push (alpine)
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        TAG: ${{steps.tag.outputs.docker_tag}}
      run: docker push $DOCKER_USER/unity2promgo:alpine$TAG
    - name: Docker Push (debian)
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        TAG: ${{steps.tag.outputs.docker_tag}}
      run: docker push $DOCKER_USER/unity2promgo:debian$TAG
    - name: Docker tag (alpine)
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        TAG: ${{steps.tag.outputs.docker_tag}}
      run: docker image tag $DOCKER_USER/unity2promgo:alpine$TAG $DOCKER_USER/unity2promgo:alpine
    - name: Docker tag (debian)
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        TAG: ${{steps.tag.outputs.docker_tag}}
      run: docker image tag $DOCKER_USER/unity2promgo:debian$TAG $DOCKER_USER/unity2promgo:debian
